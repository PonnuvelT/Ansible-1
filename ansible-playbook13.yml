# This PB installs a new windows ec2 instance by using the security group
# Install ansible on your linux machine: yum install ansible
# Make changes in the host file in /etc/ansible/hosts by adding localhost entry in the host file
# Generate the access and secret key from IAM users
# Make sure you have the key in the Network & Security -> keypair
-
  name: PB to create windows ec2 instance
  hosts: localhost
  vars:
    win_ec2_security_group: sg-0181f26ba33c0c4ee
    my_private_ip: 172.31.12.12
    my_aws_region: us-east-1
    my_instance_type: t2.micro
    my_key_name: Ponnuvel
    my_image: ami-0aad84f764a2bd39a
    my_vpc_id: vpc-0bba96be7ff2002a0
    subnet_id: subnet-0c74ca62f066ae5b0
    aws_access_key: "aws_access_key"
    aws_secret_key: "aws_secret_key"

  tasks:
    - name: Installing pip module
      yum:
        name: pip
        state: present

    - name: Installing boto, botocore and boto3 modules
      pip:
        name: ["boto", "botocore", "boto3"]
        state: present

    - name: Installing amazon aws module
      ansible.builtin.command:
        cmd: ansible-galaxy collection install amazon.aws

    - name: Adding incoming and outgoing ports for win_ec2_security_group
      ec2_group:
        name: Creating ports for security group
        description: Adding rules for default security group
        group_id: "{{ win_ec2_security_group }}"
        aws_access_key: {{ aws_access_key }}
        aws_secret_key: {{ aws_secret_key }}
        region: "{{my_aws_region}}"
        vpc_id: "{{my_vpc_id}}"

        rules:
          - name: Allow all on ingress HTTP
            proto: tcp
            to_port: 80
            from_port: 80
            cidr: 0.0.0.0/0

          - name: Allow all on ingress RDP
            proto: tcp
            to_port: 3389
            from_port: 3389
            cidr: 0.0.0.0/0

          - name: Allow all on ingress WINRM
            proto: tcp
            to_port: 5896
            from_port: 5896
            cidr: 0.0.0.0/0

    - name: Creating EC2 instance
      ec2:
        aws_access_key: {{ aws_access_key }}
        aws_secret_key: {{ aws_secret_key }}
        image: "{{ my_image }}"
        instance_type: "{{ my_instance_type }}"
        private_ip: "{{ my_private_ip }}"
        region: "{{ my_aws_region }}"
        state: present
        count: 1
        wait: no
        vpc_subnet_id: "{{subnet_id}}"
        key_name: "{{ my_key_name }}"
